---
import { Image } from "astro:assets";
import lakehouse from "../../public/lakehouse.png";
import stockmarket from "../../public/stockmarket.png";
import northwind from "../../public/northwind.png";
import scholarstream from "../../public/scholarstream.png";
const base = import.meta.env.BASE_URL;


interface Project {
  title: string;
  image: ImageMetadata;
  link: string;
  descriptionRich?: {
    sections: Array<
      | { icon?: string; title: string; type: 'paragraph'; content: string; size?: 'base' | 'lg' }
      | { icon?: string; title: string; type: 'list'; items: string[] }
    >;
  };
}

const projects: Project[] = [
  {
    title: "Data Lake Architecture: Plataforma de Dados Moderna na AWS",
    image: lakehouse as ImageMetadata,
    link: "https://github.com/victor-silva/data-lake-aws",
    descriptionRich: {
      sections: [
        {
          icon: "",
          title: "Desafio",
          type: "paragraph",
          content:
            "Construir uma arquitetura de dados moderna e escalável para processar grandes volumes de dados estruturados e não estruturados, garantindo alta disponibilidade e performance para análises em tempo real."
        },
        {
          icon: "",
          title: "Solução",
          type: "list",
          items: [
            "Desenvolvi uma arquitetura Data Lake na AWS utilizando S3, Glue e Athena, implementando camadas Bronze, Silver e Gold para processamento incremental de dados.",
            "Criei pipelines ETL automatizados com Apache Airflow e Spark, processando mais de 10TB de dados diários com alta confiabilidade e monitoramento.",
            "Implementei governança de dados com AWS Lake Formation, garantindo segurança, controle de acesso granular e audit trail completo."
          ]
        },
        {
          icon: "",
          title: "Impacto",
          type: "list",
          items: [
            "Reduzi o tempo de processamento de dados de horas para minutos, permitindo análises em tempo quase real para tomada de decisão estratégica.",
            "Implementei uma arquitetura serverless que reduziu custos operacionais em 40% enquanto aumentou a escalabilidade e confiabilidade do sistema."
          ]
        },
        {
          icon: "",
          title: "Stack",
          type: "paragraph",
          content:
            "Python, PySpark, AWS (S3, Glue, Athena, Lambda), Apache Airflow, Terraform, Docker, CI/CD (GitHub Actions).",
          size: "base"
        }
      ]
    }
  },
  {
    title: "Real-Time Analytics: Pipeline de Streaming com Kafka e Spark",
    image: stockmarket as ImageMetadata,
    link: "https://github.com/victor-silva/streaming-analytics-pipeline",
    descriptionRich: {
      sections: [
        {
          icon: "",
          title: "Desafio",
          type: "paragraph",
          content:
            "Desenvolver uma solução de analytics em tempo real para processar milhões de eventos por segundo, garantindo baixa latência e alta throughput para dashboards executivos."
        },
        {
          icon: "",
          title: "Solução",
          type: "list",
          items: [
            "Implementei uma arquitetura de streaming usando Apache Kafka como message broker e Apache Spark Streaming para processamento em tempo real.",
            "Desenvolvi microserviços containerizados com Docker e Kubernetes para ingestão de dados de múltiplas fontes (APIs, databases, IoT).",
            "Criei dashboards interativos com Apache Superset e Grafana para visualização de métricas em tempo real.",
            "Implementei alertas inteligentes com Apache Flink para detecção de anomalias e notificações automáticas."
          ]
        },
        {
          icon: "",
          title: "Impacto",
          type: "list",
          items: [
            "Reduzi a latência de processamento de dados de 15 minutos para menos de 5 segundos, habilitando tomada de decisão em tempo real.",
            "Aumentei a disponibilidade do sistema para 99.9% através de arquitetura distribuída e estratégias de failover automático.",
            "Implementei monitoramento proativo que reduziu o tempo médio de detecção de problemas (MTTD) em 80%."
          ]
        },
        {
          icon: "",
          title: "Stack",
          type: "paragraph",
          content:
            "Apache Kafka, Apache Spark, Apache Flink, Docker, Kubernetes, Apache Superset, Grafana, Python, Scala.",
          size: "base"
        }
      ]
    }
  },
  {
    title: "Cloud Data Warehouse: Solução Analytics com Snowflake e dbt",
    image: northwind as ImageMetadata,
    link: "https://github.com/victor-silva/cloud-data-warehouse",
    descriptionRich: {
      sections: [
        {
          icon: "",
          title: "Desafio",
          type: "paragraph",
          content:
            "Migrar um data warehouse on-premises legado para a nuvem, modernizando a stack de analytics e implementando práticas de DataOps para acelerar o desenvolvimento de modelos de dados."
        },
        {
          icon: "",
          title: "Solução",
          type: "list",
          items: [
            "Migrei a infraestrutura para Snowflake, implementando arquitetura multi-cluster para otimização de custos e performance.",
            "Desenvolvi modelos de dados dimensionais com dbt, implementando testes automatizados e documentação viva.",
            "Criei pipelines CI/CD com GitHub Actions para deploy automatizado de modelos e validação de qualidade de dados.",
            "Implementei estratégias de particionamento e clustering para otimizar consultas complexas e reduzir custos de compute."
          ]
        },
        {
          icon: "",
          title: "Impacto",
          type: "list",
          items: [
            "Reduzi custos de infraestrutura em 60% através da migração para arquitetura cloud-native e otimizações de performance.",
            "Acelerei o desenvolvimento de novos modelos de dados em 70% através da implementação de práticas de DataOps.",
            "Aumentei a confiabilidade dos dados com cobertura de testes automatizados de 95% e monitoramento contínuo de qualidade."
          ]
        },
        {
          icon: "",
          title: "Stack",
          type: "paragraph",
          content:
            "Snowflake, dbt, GitHub Actions, Python, SQL, Terraform, Docker, Apache Airflow.",
          size: "base"
        }
      ]
    }
  },
  {
    title: "MLOps Platform: Pipeline de Machine Learning em Produção",
    image: scholarstream as ImageMetadata,
    link: "https://github.com/victor-silva/mlops-platform",
    descriptionRich: {
      sections: [
        {
          icon: "",
          title: "Desafio",
          type: "paragraph",
          content:
            "Construir uma plataforma MLOps completa para automatizar o ciclo de vida de modelos de machine learning, desde o desenvolvimento até o deployment em produção, garantindo monitoramento e versionamento."
        },
        {
          icon: "",
          title: "Solução",
          type: "list",
          items: [
            "Desenvolvi uma plataforma MLOps usando MLflow para tracking de experimentos e versionamento de modelos.",
            "Implementei pipelines automatizados com Apache Airflow para retreinamento de modelos baseado em drift de dados.",
            "Criei APIs de serving de modelos com FastAPI e Docker, deployadas em Kubernetes para alta escalabilidade.",
            "Implementei monitoramento de modelos em produção com Prometheus e Grafana para detecção de degradação de performance."
          ]
        },
        {
          icon: "",
          title: "Impacto",
          type: "list",
          items: [
            "Reduzi o tempo de deployment de modelos de semanas para horas através da automação completa do pipeline MLOps.",
            "Aumentei a precisão dos modelos em produção em 15% através de retreinamento automático baseado em métricas de performance.",
            "Implementei governança de modelos que garante auditabilidade e compliance em ambientes regulamentados."
          ]
        },
        {
          icon: "",
          title: "Stack",
          type: "paragraph",
          content:
            "MLflow, Apache Airflow, FastAPI, Docker, Kubernetes, Prometheus, Grafana, Python, scikit-learn, TensorFlow.",
          size: "base"
        }
      ]
    }
  },
];
---

<section id="projetos" class="scroll-mt-24 py-12 border-t border-[#ffffff10] text-[var(--white)]">
  <div class="max-w-5xl mx-auto">
    <h2 class="text-lg text-[var(--sec)] mb-2 shiny-sec">Meus projetos</h2>
    <h3 class="text-4xl md:text-5xl font-medium mb-8">Projetos</h3>
    <div class="grid grid-cols-1 gap-0">
      {
        projects.map((project) => (
          <div class="block border-t border-[#ffffff10] py-12 md:py-16 first:border-t-0 first:pt-0">
            <div class="rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 mb-6">
              <div class="aspect-video"> <!-- 16:9 -->
                <Image
                  src={project.image}
                  alt={project.title}
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                />
              </div>
            </div>
            <div class="px-3">
              <div>
                <h4 class="text-3xl font-semibold">{project.title}</h4>
                {project.descriptionRich && (
                  <div class="mt-3 space-y-4">
                    {project.descriptionRich.sections.map((sec) => (
                      sec.type === 'paragraph' ? (
                        <p class={`text-[var(--white-icon)] ${
                              sec.size === 'base' ? 'text-base md:text-lg' : 'text-lg md:text-xl'
                            } leading-8`}>
                          {sec.icon ? <span class="mr-2">{sec.icon}</span> : null}
                          <strong class="text-[var(--white)]">{sec.title}:</strong>{' '}
                          {sec.content}
                        </p>
                      ) : (
                        <div>
                          <p class="text-[var(--white-icon)] text-lg md:text-xl leading-8">
                            {sec.icon ? <span class="mr-2">{sec.icon}</span> : null}
                            <strong class="text-[var(--white)]">{sec.title}:</strong>
                          </p>
                          <ul class="text-[var(--white-icon)] text-base md:text-lg mt-2 list-disc pl-5 space-y-1">
                            {sec.items.map((item) => <li>{item}</li>)}
                          </ul>
                        </div>
                      )
                    ))}
                  </div>
                )}
                <a
                  target="_blank"
                  href={project.link}
                  aria-label={`Repositório de ${project.title}`}
                  class="inline-flex items-center gap-2 mt-4 text-[var(--white-icon)] hover:text-white transition duration-300 ease-in-out border border-[var(--white-icon-tr)] px-3 py-2 rounded-xl bg-[#1414149c] hover:bg-[var(--white-icon-tr)]"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    class="size-5"
                  >
                    <path
                      d="M12.001 2C6.47598 2 2.00098 6.475 2.00098 12C2.00098 16.425 4.86348 20.1625 8.83848 21.4875C9.33848 21.575 9.52598 21.275 9.52598 21.0125C9.52598 20.775 9.51348 19.9875 9.51348 19.15C7.00098 19.6125 6.35098 18.5375 6.15098 17.975C6.03848 17.6875 5.55098 16.8 5.12598 16.5625C4.77598 16.375 4.27598 15.9125 5.11348 15.9C5.90098 15.8875 6.46348 16.625 6.65098 16.925C7.55098 18.4375 8.98848 18.0125 9.56348 17.75C9.65098 17.1 9.91348 16.6625 10.201 16.4125C7.97598 16.1625 5.65098 15.3 5.65098 11.475C5.65098 10.3875 6.03848 9.4875 6.67598 8.7875C6.57598 8.5375 6.22598 7.5125 6.77598 6.1375C6.77598 6.1375 7.61348 5.875 9.52598 7.1625C10.326 6.9375 11.176 6.825 12.026 6.825C12.876 6.825 13.726 6.9375 14.526 7.1625C16.4385 5.8625 17.276 6.1375 17.276 6.1375C17.826 7.5125 17.476 8.5375 17.376 8.7875C18.0135 9.4875 18.401 10.375 18.401 11.475C18.401 15.3125 16.0635 16.1625 13.8385 16.4125C14.201 16.725 14.5135 17.325 14.5135 18.2625C14.5135 19.6 14.501 20.675 14.501 21.0125C14.501 21.275 14.6885 21.5875 15.1885 21.4875C19.259 20.1133 21.9999 16.2963 22.001 12C22.001 6.475 17.526 2 12.001 2Z"
                    />
                  </svg>
                  <span class="text-sm md:text-base font-medium"> Ver repositório </span>
                </a>
              </div>
            </div>
          </div>
        ))
      }
    </div>
    <a
      target="_blank"
      href="https://github.com/victor-silva?tab=repositories"
      aria-label="GitHub"
      class="w-full flex items-center justify-center gap-2 mt-9 text-[var(--white-icon)] hover:text-white transition duration-300 ease-in-out border border-[var(--white-icon-tr)] p-3 rounded-full bg-[#1414149c] hover:bg-[var(--white-icon-tr)] hover:scale-105"
    >
      <span class="md:text-lg text-md">Veja mais projetos no GitHub</span>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
        <path
          d="M12.001 2C6.47598 2 2.00098 6.475 2.00098 12C2.00098 16.425 4.86348 20.1625 8.83848 21.4875C9.33848 21.575 9.52598 21.275 9.52598 21.0125C9.52598 20.775 9.51348 19.9875 9.51348 19.15C7.00098 19.6125 6.35098 18.5375 6.15098 17.975C6.03848 17.6875 5.55098 16.8 5.12598 16.5625C4.77598 16.375 4.27598 15.9125 5.11348 15.9C5.90098 15.8875 6.46348 16.625 6.65098 16.925C7.55098 18.4375 8.98848 18.0125 9.56348 17.75C9.65098 17.1 9.91348 16.6625 10.201 16.4125C7.97598 16.1625 5.65098 15.3 5.65098 11.475C5.65098 10.3875 6.03848 9.4875 6.67598 8.7875C6.57598 8.5375 6.22598 7.5125 6.77598 6.1375C6.77598 6.1375 7.61348 5.875 9.52598 7.1625C10.326 6.9375 11.176 6.825 12.026 6.825C12.876 6.825 13.726 6.9375 14.526 7.1625C16.4385 5.8625 17.276 6.1375 17.276 6.1375C17.826 7.5125 17.476 8.5375 17.376 8.7875C18.0135 9.4875 18.401 10.375 18.401 11.475C18.401 15.3125 16.0635 16.1625 13.8385 16.4125C14.201 16.725 14.5135 17.325 14.5135 18.2625C14.5135 19.6 14.501 20.675 14.501 21.0125C14.501 21.275 14.6885 21.5875 15.1885 21.4875C19.259 20.1133 21.9999 16.2963 22.001 12C22.001 6.475 17.526 2 12.001 2Z"
        ></path>
      </svg>
    </a>
  </div>
</section>